#!/usr/bin/env ruby
require 'pathname'
require 'fileutils'

# path to your application root.
APP_ROOT = File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

FileUtils.chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  # Install JavaScript dependencies if using Yarn
  system('bin/yarn')
  # system('cd error_page_app && yarn')

  # puts "\n== Copying sample files =="
  # unless File.exist?('config/database.yml')
  #   cp 'config/database.yml.sample', 'config/database.yml'
  # end

  # system! "rm -fr front_app/node_modules"
  # system! "cd front_app && yarn"

  system! "rm -fr public/system"
  system! 'bin/rails dev:cache'

  system! 'saferenum -x experiment'
  # system! 'saferenum -x -b 1000 config/app_data/free_battles'

  puts "\n== Preparing database =="
  # system! 'bin/rails db:setup'
  # system! 'bin/rails db:environment:set RAILS_ENV=development'
  system! 'bin/rails db:drop:_unsafe'
  system! 'bin/rails db:migrate:reset'
  system! 'bin/rails db:structure:dump'
  system! 'SETUP=1 rails db:seed'
  system! 'bin/rails aam'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear'
  system! 'bin/rails tmp:clear'
  # system! 'bin/rails webpacker:clobber'

  # puts "\n== Production log download =="
  # system! "cap production access_log:download"
  # system! "cap production cron_log:download"
  # system! "cap production error_log:download"
  # system! "cap production mail_log:download"
  # system! "cap production rails:log:download"

  puts "\n== time_record redis clear =="
  system! 'bin/rails r XyMaster::TimeRecord.delete_all'
  system! 'bin/rails r XyMaster::RuleInfo.redis.flushdb'
  system! 'bin/rails r TsMaster::TimeRecord.delete_all'
  system! 'bin/rails r TsMaster::RuleInfo.redis.flushdb'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'

  system! "say 'テスト実行'"

  puts "\n== Testing =="
  system! "rm -fr doc/images montage*.png"
  system 'GENERATE_IMAGE=1 rails spec'
  system! 'bin/rails create_montage'
  # system! 'open montage.png'

  system! "say 'セットアップ完了'"
end
